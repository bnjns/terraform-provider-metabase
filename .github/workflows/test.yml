name: Test

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'readme.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'readme.md'

permissions:
  contents: read

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      METABASE_HOST: http://localhost:3000
      METABASE_USERNAME: example@example.com
      METABASE_PASSWORD: password
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - shell: bash
        name: Start Metabase
        run: scripts/start.sh
      - shell: bash
        name: Set up Metabase
        run: ./scripts/setup_metabase.sh
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - shell: bash
        run: |
          go test ./... \
            -coverprofile=tests/coverage-unit.out -json | tee tests/report-unit.json
      - uses: actions/upload-artifact@v4
        with:
          name: tests-unit
          path: tests/

  acceptance:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      METABASE_HOST: http://localhost:3000
      METABASE_USERNAME: example@example.com
      METABASE_PASSWORD: password
    strategy:
      fail-fast: false
      matrix:
        terraform:
          - '1.0'
          - '1.1'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - shell: bash
        name: Start Metabase and databases
        run: scripts/start.sh
      - shell: bash
        name: Set up Metabase
        run: ./scripts/setup_metabase.sh
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.terraform }}.*
          terraform_wrapper: false
      - run: go mod download
      - shell: bash
        env:
          TF_ACC: "1"
        run: |
          go test -v ./... -run "^TestAcc" \
            -coverprofile=tests/coverage-acc.out -json | tee tests/report-acc.json
        timeout-minutes: 10
      - uses: actions/upload-artifact@v4
        with:
          name: tests-acc-${{ matrix.terraform }}
          path: tests/

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs:
      - unit
      - acceptance
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v5
        with:
          path: .
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
